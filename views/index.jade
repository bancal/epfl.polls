extends layout

block content
    h1= title
    p Welcome to #{title}, #{user.displayName}

    block poll
        h2 Prochain DOJO
        p Quel(s) genre(s) d'activité(s) souhaiteriez-vous pour le prochain Dojo ?

    form(action="/submit" method="post")
        ul(id="sortable")
            li(id="sba")
                label JavaScript (côté client): jQuery mais aussi AngularJS.
            li(id="jma")
                label Réussir des appels AJAX sur un serveur LAMP depuis une page Jahia.
            li(id="sne1")
                label Utiliser socket.io&nbsp;
                    a(href="http://socket.io") (socket.io)
            li(id="sne2")
                label Angular.js (version 2 qui se pointe)&nbsp;
                    a(href="https://angularjs.org/") (angularjs)
            li(id="sne3")
                label code isomorphique avec des choses genre meteor.js, react.js, invisible.js (cf. http://isomorphic.net/ )&nbsp;
                    a(href="http://isomorphic.net") (isomorphic.net)
                    a(href="https://www.meteor.com") (meteor.js)
                    a(href="http://facebook.github.io/react/") (react.js - fb)
                    a(href="http://invisiblejs.github.io/") (invisible.js)
            li(id="sne4")
                label Gestion multilangue&nbsp;
                    a(href="http://airbnb.github.io/polyglot.js/") (polyglot.js)
            li(id="sne5")
                label TypeScript : Qu'est-ce que ça peut apporter (vu que ça sera la colonne vertébrale d'Angular 2)&nbsp;
                    a(href="http://www.typescriptlang.org/") (typescriptlang.org)
            li(id="sne6")
                label Dojo django (par curiosité pour comparer avec ce que je connais)&nbsp;
                    a(href="https://www.djangoproject.com/") (djangoproject)
            li(id="sne7")
                label Dojo RoR  (à nouveau plus par curiosité que par réel besoin)&nbsp;
                    a(href="http://rubyonrails.org/") (rubyonrails)
            li(id="sne8")
                label continuer la partie Test qu'on avait commencé, mais qui c'était arrêté lamentablement (sic)&nbsp;
                    a(href="http://mochajs.org/") (mochajs)
            li(id="dqu")
                label Jeux de carte (p.ex. poker) côté client&nbsp;
            li(id="nbo1")
                label exploiter les services offlines des browsers (Local DB, AppCache, ServiceWorker) p.ex. en faisant une todo list&nbsp;
                    a(href="http://www.html5rocks.com/en/features/storage") (Local DB)
                    a(href="http://www.html5rocks.com/en/tutorials/appcache/beginner/") (AppCache)
                    a(href="http://www.html5rocks.com/en/tutorials/service-worker/introduction/") (ServiceWorker)
            li(id="nbo2")
                label recoder go.epfl.ch en utilisant node.js&nbsp;
                    a(href="http://go.epfl.ch") (go.epfl.ch)
            li(id="nbo3")
                label utiliser Docker pour le serveur mongodb et nodejs de epfl.polls&nbsp;
                    a(href="https://www.docker.com/") (docker.com)

        div(class="centered")
            button(type="button", class="btn btn-primary btn-lg", id="btnSubmit") Vote !

        br
        br
        br
    //
        PROPOSALS --
        * SBA:  Veut bosser JavaScript (côté client): jQuery mais aussi AngularJS.
        * JMA:  Réussir des appels AJAX sur un serveur LAMP depuis une page Jahia.
        * SNE:  - socket.io
                - Angular.js (version 2 qui se pointe)
                - code isomorphique avec des choses genre meteor.js, react.js, invisible.js (cf. http://isomorphic.net/ )
                - Gestion multilangue... (est-ce qu'avec ça http://airbnb.github.io/polyglot.js/ ça pourrait aider...)
                - TypeScript... Qu'est-ce que ça peut apporter (vu que ça sera la colonne vertébrale d'Angular 2)?
                - Dojo django (par curiosité pour comparer avec ce que je connais)
                - Dojo RoR  (à nouveau plus par curiosité que par réel besoin)
                - continuer la partie Test qu'on avait commencé, mais qui c'était arrêté lamentablement
        * DQU:  Jeux de carte (p.ex. poker) côté client
        * NBO:  - exploiter les services offlines des browsers (Local DB, AppCache, ServiceWorker) p.ex. en faisant une todo list (http://www.html5rocks.com/en/features/storage, http://www.html5rocks.com/en/tutorials/appcache/beginner/, http://www.html5rocks.com/en/tutorials/service-worker/introduction/)
                - recoder go.epfl.ch en utilisant node.js